{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/Input/Input.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","editedName","name","toUpperCase","slice","Input","value","onInputChange","type","placeholder","onChange","required","initialState","NewMovie","state","event","target","setState","prevState","onSubmit","preventDefault","props","onAdd","this","Object","entries","Component","App","moviesFromServer","ReactDOM","render","document","getElementById"],"mappings":"ixEAIaA,G,kBAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,YAAaC,EAAvB,EAAuBA,OAAQC,EAA/B,EAA+BA,QAA/B,OACvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAMJ,GAAT,aAaRJ,EAAUS,aAAe,CACvBP,YAAa,ICxCR,IAAMQ,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACxB,yBAAKN,UAAU,UACZM,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAYF,SAgBxCH,EAAWD,aAAe,CACxBE,OAAQ,I,0BCvBJK,EAAa,SAAAC,GAAI,OACrBA,EAAK,GAAGC,cAAgBD,EAAKE,MAAM,IAGxBC,EAAQ,SAAC,GAAD,IAAGH,EAAH,EAAGA,KAAMI,EAAT,EAASA,MAAOC,EAAhB,EAAgBA,cAAhB,OACnB,+BACGN,EAAWC,GACZ,2BACEZ,UAAU,QACVkB,KAAK,OACLN,KAAMA,EACNO,YAAaR,EAAWC,GACxBI,MAAOA,EACPI,SAAUH,EACVI,UAAQ,MCbRC,EAAe,CACnB1B,MAAO,GACPC,YAAa,GACbC,OAAQ,GACRC,QAAS,GACTW,OAAQ,IAGGa,EAAb,4MACEC,MADF,eACeF,GADf,EAGEL,cAAgB,SAACQ,GAAW,IAAD,EACDA,EAAMC,OAAtBV,EADiB,EACjBA,MAAOJ,EADU,EACVA,KAEf,EAAKe,UAAS,SAAAC,GAAS,kCAClBA,GADkB,kBAEpBhB,EAAOI,QARd,EAYEa,SAAW,SAACJ,GACVA,EAAMK,iBAEN,EAAKC,MAAMC,MAAM,EAAKR,OAEtB,EAAKG,SAAL,eAAmBL,KAjBvB,0DAqBIW,KAAKN,SAAL,eAAmBL,MArBvB,+BAwBY,IAAD,OACP,OACE,0BACEV,KAAK,WACLZ,UAAU,QACV6B,SAAUI,KAAKJ,UAEdK,OAAOC,QAAQF,KAAKT,OAAOjB,KAAI,mCAAEK,EAAF,KAAQI,EAAR,YAC9B,kBAAC,EAAD,CACEJ,KAAMA,EACNI,MAAOA,EACPC,cAAe,EAAKA,mBAGxB,4BACEC,KAAK,SACLlB,UAAU,+BAFZ,YAtCR,GAA8BoC,a,QCNjBC,EAAb,4MACEb,MAAQ,CACNlB,OAAQgC,GAFZ,EAKEN,MAAQ,SAACxB,GACP,EAAKmB,UAAS,SAAAC,GAAS,MAAK,CAC1BtB,OAAO,GAAD,mBAAMsB,EAAUtB,QAAhB,CAAwBE,SAPpC,uDAWY,IACAF,EAAW2B,KAAKT,MAAhBlB,OAER,OACE,yBAAKN,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAYM,OAAQA,KAEtB,yBAAKN,UAAU,WACb,kBAAC,EAAD,CAAUgC,MAAOC,KAAKD,cApBhC,GAAyBI,aCDzBG,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.b7de7e51.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst editedName = name => (\n  name[0].toUpperCase() + name.slice(1)\n);\n\nexport const Input = ({ name, value, onInputChange }) => (\n  <label>\n    {editedName(name)}\n    <input\n      className=\"input\"\n      type=\"text\"\n      name={name}\n      placeholder={editedName(name)}\n      value={value}\n      onChange={onInputChange}\n      required\n    />\n  </label>\n);\n\nInput.propTypes = {\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  onInputChange: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Input } from '../Input';\n\nconst initialState = {\n  title: '',\n  description: '',\n  imgUrl: '',\n  imdbUrl: '',\n  imdbId: '',\n};\n\nexport class NewMovie extends Component {\n  state = { ...initialState };\n\n  onInputChange = (event) => {\n    const { value, name } = event.target;\n\n    this.setState(prevState => ({\n      ...prevState,\n      [name]: value,\n    }));\n  }\n\n  onSubmit = (event) => {\n    event.preventDefault();\n\n    this.props.onAdd(this.state);\n\n    this.setState({ ...initialState });\n  }\n\n  clearForm() {\n    this.setState({ ...initialState });\n  }\n\n  render() {\n    return (\n      <form\n        name=\"newMovie\"\n        className=\"field\"\n        onSubmit={this.onSubmit}\n      >\n        {Object.entries(this.state).map(([name, value]) => (\n          <Input\n            name={name}\n            value={value}\n            onInputChange={this.onInputChange}\n          />\n        ))}\n        <button\n          type=\"submit\"\n          className=\"button is-dark is-fullwidth\"\n        >\n          Add\n        </button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  onAdd = (movie) => {\n    this.setState(prevState => ({\n      movies: [...prevState.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie onAdd={this.onAdd} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}